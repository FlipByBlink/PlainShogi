import WidgetKit
import SwiftUI

private struct ðŸ„¿rovider: TimelineProvider {
    func placeholder(in context: Context) -> ðŸ…‚impleEntry {
        ðŸ…‚impleEntry()
    }
    func getSnapshot(in context: Context, completion: @escaping (ðŸ…‚impleEntry) -> ()) {
        completion(ðŸ…‚impleEntry())
    }
    func getTimeline(in context: Context, completion: @escaping (Timeline<Entry>) -> ()) {
        completion(Timeline(entries: [ðŸ…‚impleEntry()], policy: .never))
    }
}

private struct ðŸ…‚impleEntry: TimelineEntry {
    let date: Date = .now
}

private struct ðŸ„¿SComplicationEntryView : View {
    var body: some View {
        ZStack {
            AccessoryWidgetBackground()
            Text("â˜–")
                .font(.title)
        }
        .widgetAccentable()
    }
}

@main
struct ðŸ„¿SComplication: Widget {
    var body: some WidgetConfiguration {
        StaticConfiguration(kind: "PSComplication", provider: ðŸ„¿rovider()) { _ in
            ðŸ„¿SComplicationEntryView()
        }
        .configurationDisplayName("Plainå°†æ£‹ç›¤")
        .description("ã‚·ãƒ§ãƒ¼ãƒˆã‚«ãƒƒãƒˆ")
        .supportedFamilies([.accessoryCircular, .accessoryCorner, .accessoryInline])
    }
}
