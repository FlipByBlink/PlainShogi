import SwiftUI

struct üõ†„É°„Éã„É•„Éº„Éà„ÉÉ„Éó: View {
    var body: some View {
        NavigationStack {
            List {
                Á∑®ÈõÜ„É°„Éã„É•„Éº()
                „Ç™„Éó„Ç∑„Éß„É≥„É°„Éã„É•„Éº()
                Â±•Ê≠¥„É°„Éã„É•„Éº()
                „Éñ„ÉÉ„ÇØ„Éû„Éº„ÇØ„É°„Éã„É•„Éº()
                „Ç¨„Ç§„Éâ„É°„Éã„É•„Éº()
            }
            .navigationTitle(‚ÑπÔ∏èappName)
        }
    }
}

private struct Á∑®ÈõÜ„É°„Éã„É•„Éº: View {
    var body: some View {
        NavigationLink {
            Self.„É°„Éã„É•„Éº()
        } label: {
            Label("Á∑®ÈõÜ", systemImage: "hand.point.up.left")
        }
    }
    private struct „É°„Éã„É•„Éº: View {
        @EnvironmentObject private var üì±: üì±„Ç¢„Éó„É™„É¢„Éá„É´
        var body: some View {
            List {
                Âº∑Ë™øË°®Á§∫„ÇØ„É™„Ç¢„Éú„Çø„É≥()
                self.Áõ§Èù¢ÂàùÊúüÂåñ„Éú„Çø„É≥()
                self.Á∑®ÈõÜ„É¢„Éº„ÉâÈñãÂßã„Éú„Çø„É≥()
                self.‰∏ÄÊâãÊàª„Åô„Éú„Çø„É≥()
            }
            .navigationTitle("Á∑®ÈõÜ")
        }
        private func Áõ§Èù¢ÂàùÊúüÂåñ„Éú„Çø„É≥() -> some View {
            Button {
                üì±.Áõ§Èù¢„ÇíÂàùÊúüÂåñ„Åô„Çã()
            } label: {
                Label("Áõ§Èù¢„ÇíÂàùÊúüÂåñ", systemImage: "arrow.counterclockwise")
            }
        }
        private func Á∑®ÈõÜ„É¢„Éº„ÉâÈñãÂßã„Éú„Çø„É≥() -> some View {
            Button {
                üì±.Á∑®ÈõÜ„É¢„Éº„Éâ„ÇíÈñãÂßã„Åô„Çã()
            } label: {
                Label("Èßí„ÇíÊ∂à„Åó„Åü„ÇäÂ¢ó„ÇÑ„Åó„Åü„Çä„Åô„Çã", systemImage: "wand.and.rays")
            }
        }
        private func ‰∏ÄÊâãÊàª„Åô„Éú„Çø„É≥() -> some View {
            Button {
                üì±.‰∏ÄÊâãÊàª„Åô()
            } label: {
                Label("‰∏ÄÊâã„Å†„ÅëÊàª„Åô", systemImage: "arrow.backward.to.line")
            }
            .disabled(üì±.Â±ÄÈù¢.‰∏ÄÊâãÂâç„ÅÆÂ±ÄÈù¢ == nil)
        }
    }
}

private struct Âº∑Ë™øË°®Á§∫„ÇØ„É™„Ç¢„Éú„Çø„É≥: View {
    @EnvironmentObject private var üì±: üì±„Ç¢„Éó„É™„É¢„Éá„É´
    private var ‰Ωï„ÇÇÂº∑Ë™øË°®Á§∫„Åï„Çå„Å¶„ÅÑ„Å™„ÅÑ: Bool {
        üì±.Â±ÄÈù¢.Áõ¥Ëøë„ÅÆÊìç‰Ωú == .„Å™„Åó && üì±.ÈÅ∏Êäû‰∏≠„ÅÆÈßí == .„Å™„Åó
    }
    var body: some View {
        Button {
            üì±.Âº∑Ë™øË°®Á§∫„Çí„ÇØ„É™„Ç¢()
        } label: {
            Label("Âº∑Ë™øË°®Á§∫„Çí„ÇØ„É™„Ç¢", systemImage: "square.dashed")
        }
        .disabled(self.‰Ωï„ÇÇÂº∑Ë™øË°®Á§∫„Åï„Çå„Å¶„ÅÑ„Å™„ÅÑ)
        .disabled(üì±.üö©Áõ¥ËøëÊìç‰ΩúÂº∑Ë™øË°®Á§∫Ê©üËÉΩ„Ç™„Éï && (üì±.ÈÅ∏Êäû‰∏≠„ÅÆÈßí == .„Å™„Åó))
    }
}

private struct „Ç™„Éó„Ç∑„Éß„É≥„É°„Éã„É•„Éº: View {
    var body: some View {
        NavigationLink {
            Self.„É°„Éã„É•„Éº()
        } label: {
            Label("„Ç™„Éó„Ç∑„Éß„É≥", systemImage: "gearshape")
        }
    }
   private struct „É°„Éã„É•„Éº: View {
       @EnvironmentObject private var üì±: üì±„Ç¢„Éó„É™„É¢„Éá„É´
       @AppStorage("Â§™Â≠ó") private var Â§™Â≠ó: Bool = false
        var body: some View {
            List {
                Toggle(isOn: $üì±.üö©‰∏ä‰∏ãÂèçËª¢) {
                    Label("‰∏ä‰∏ãÂèçËª¢", systemImage: "arrow.up.arrow.down")
                }
                Toggle(isOn: self.$Â§™Â≠ó) {
                    Label("Â§™Â≠ó", systemImage: "bold")
                        .font(.body.bold())
                }
                Toggle(isOn: $üì±.üö©EnglishË°®Ë®ò) {
                    Label("EnglishË°®Ë®ò", systemImage: "p.circle")
                }
                Toggle(isOn: $üì±.üö©Áõ¥ËøëÊìç‰ΩúÂº∑Ë™øË°®Á§∫Ê©üËÉΩ„Ç™„Éï) {
                    Label("Êìç‰Ωú„Åó„ÅüÁõ¥Âæå„ÅÆÈßí„ÅÆÂº∑Ë™øË°®Á§∫„ÇíÂ∏∏„Å´ÁÑ°Âäπ",
                          systemImage: "square.slash")
                }
            }
            .navigationTitle("„Ç™„Éó„Ç∑„Éß„É≥")
        }
    }
}

private struct Â±•Ê≠¥„É°„Éã„É•„Éº: View {
    var body: some View {
        NavigationLink {
            Self.„É°„Éã„É•„Éº()
        } label: {
            Label("Â±•Ê≠¥", systemImage: "clock")
        }
    }
    private struct „É°„Éã„É•„Éº: View {
        @EnvironmentObject private var üì±: üì±„Ç¢„Éó„É™„É¢„Éá„É´
        var body: some View {
            List {
                Section {
                    Text("Áõ¥Ëøë„ÅÆÁ¥Ñ30Â±ÄÈù¢„ÇíÂ±•Ê≠¥„Å®„Åó„Å¶‰øùÂ≠ò„Åó„Åæ„Åô")
                }
                ForEach(Â±ÄÈù¢„É¢„Éá„É´.Â±•Ê≠¥.reversed(), id: \.Êõ¥Êñ∞Êó•ÊôÇ) { Â±ÄÈù¢ in
                    HStack {
                        Text("Â±ÄÈù¢„Éó„É¨„Éì„É•„Éº(Â±ÄÈù¢)")
                            .redacted(reason: .placeholder)
                        Spacer()
                        VStack(alignment: .trailing, spacing: 4) {
                            Text(Â±ÄÈù¢.Êõ¥Êñ∞Êó•‰ªòË°®Ë®ò)
                            Text(Â±ÄÈù¢.Êõ¥Êñ∞ÊôÇÂàªË°®Ë®ò)
                                .font(.subheadline)
                            Spacer()
                            Button {
                                üì±.‰ªªÊÑè„ÅÆÂ±ÄÈù¢„ÇíÁèæÂú®„ÅÆÂ±ÄÈù¢„Å®„Åó„Å¶ÈÅ©Áî®„Åô„Çã(Â±ÄÈù¢)
                            } label: {
                                HStack {
                                    Image(systemName: "square.and.arrow.down")
                                    Text("Âæ©ÂÖÉ")
                                }
                                .font(.caption.weight(.medium))
                            }
                            .buttonStyle(.bordered)
                            .dynamicTypeSize(...DynamicTypeSize.xLarge)
                        }
                        .foregroundStyle(.secondary)
                        .lineLimit(1)
                        .minimumScaleFactor(0.1)
                    }
                    .padding()
                }
            }
            .navigationTitle("Â±•Ê≠¥")
        }
    }
}

private struct „Éñ„ÉÉ„ÇØ„Éû„Éº„ÇØ„É°„Éã„É•„Éº: View {
    var body: some View {
        NavigationLink {
            Self.„É°„Éã„É•„Éº()
        } label: {
            Label("„Éñ„ÉÉ„ÇØ„Éû„Éº„ÇØ", systemImage: "bookmark")
        }
    }
    private struct „É°„Éã„É•„Éº: View {
        @EnvironmentObject private var üì±: üì±„Ç¢„Éó„É™„É¢„Éá„É´
        @State private var „Éñ„ÉÉ„ÇØ„Éû„Éº„ÇØ: Â±ÄÈù¢„É¢„Éá„É´? = nil
        private var ÁèæÂú®„ÅÆÂ±ÄÈù¢„Å®„Éñ„ÉÉ„ÇØ„Éû„Éº„ÇØ„ÅØÂêå„Åò: Bool {
            üì±.Â±ÄÈù¢.Êõ¥Êñ∞Êó•ÊôÇ == self.„Éñ„ÉÉ„ÇØ„Éû„Éº„ÇØ?.Êõ¥Êñ∞Êó•ÊôÇ
        }
        var body: some View {
            List {
                Section {
                    VStack(spacing: 20) {
                        Text("Â±ÄÈù¢„Éó„É¨„Éì„É•„Éº(‰ªÆ)")
                            .frame(width: 100, height: 100)
                            .redacted(reason: .placeholder)
                        Button {
                            guard let „Éñ„ÉÉ„ÇØ„Éû„Éº„ÇØ else { return }
                            üì±.‰ªªÊÑè„ÅÆÂ±ÄÈù¢„ÇíÁèæÂú®„ÅÆÂ±ÄÈù¢„Å®„Åó„Å¶ÈÅ©Áî®„Åô„Çã(„Éñ„ÉÉ„ÇØ„Éû„Éº„ÇØ)
                        } label: {
                            Label("Âæ©ÂÖÉ", systemImage: "square.and.arrow.down")
                                .font(.body.weight(.medium))
                        }
                        .buttonStyle(.bordered)
                        .disabled(self.ÁèæÂú®„ÅÆÂ±ÄÈù¢„Å®„Éñ„ÉÉ„ÇØ„Éû„Éº„ÇØ„ÅØÂêå„Åò)
                        .disabled(self.„Éñ„ÉÉ„ÇØ„Éû„Éº„ÇØ == nil)
                    }
                    .padding()
                    .frame(maxWidth: .infinity)
                }
                Section {
                    Button {
                        withAnimation {
                            üì±.ÁèæÂú®„ÅÆÂ±ÄÈù¢„Çí„Éñ„ÉÉ„ÇØ„Éû„Éº„ÇØ„Åô„Çã()
                            self.„Éñ„ÉÉ„ÇØ„Éû„Éº„ÇØ = .„Éñ„ÉÉ„ÇØ„Éû„Éº„ÇØ„ÇíË™≠„ÅøËæº„ÇÄ()
                        }
                    } label: {
                        Label("ÁèæÂú®„ÅÆÂ±ÄÈù¢„Çí„Éñ„ÉÉ„ÇØ„Éû„Éº„ÇØ", systemImage: "bookmark")
                            .font(.body.weight(.semibold))
                    }
                    .disabled(self.ÁèæÂú®„ÅÆÂ±ÄÈù¢„Å®„Éñ„ÉÉ„ÇØ„Éû„Éº„ÇØ„ÅØÂêå„Åò)
                } footer: {
                    Label("„Éñ„ÉÉ„ÇØ„Éû„Éº„ÇØ„Å´‰øùÂ≠ò„Åß„Åç„ÇãÂ±ÄÈù¢„ÅØ1„Å§„Å†„Åë„Åß„Åô", systemImage: "1.circle")
                }
            }
            .navigationTitle("„Éñ„ÉÉ„ÇØ„Éû„Éº„ÇØ")
        }
    }
}

private struct „Ç¨„Ç§„Éâ„É°„Éã„É•„Éº: View {
    var body: some View {
        NavigationLink {
            self.„É°„Éã„É•„Éº()
        } label: {
            Label("About App", systemImage: "questionmark")
        }
    }
    private func „É°„Éã„É•„Éº() -> some View {
        List {
            ZStack {
                Color.clear
                VStack(spacing: 8) {
                    Image("RoundedIcon")
                        .resizable()
                        .frame(width: 60, height: 60)
                        .clipShape(Circle())
                    VStack(spacing: 6) {
                        Text(‚ÑπÔ∏èappName)
                            .font(.system(.headline))
                            .tracking(1.5)
                            .opacity(0.75)
                        Text(‚ÑπÔ∏èappSubTitle)
                            .font(.footnote)
                            .foregroundStyle(.secondary)
                            .multilineTextAlignment(.center)
                    }
                    .lineLimit(2)
                    .minimumScaleFactor(0.1)
                }
                .padding(.horizontal, 4)
                .padding(.vertical, 16)
            }
            Link(destination: üîóappStoreProductURL) {
                Label("Open AppStore page", systemImage: "link")
            }
        }
    }
}
